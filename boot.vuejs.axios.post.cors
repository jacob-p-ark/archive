

//boot
//========================================================================================================================
@Configuration
public class WebConfig implements WebMvcConfigurer {
    private static final Logger log = LoggerFactory.getLogger(WebConfig.class);

    @Override
    public void addCorsMappings(CorsRegistry registry) {
        registry.addMapping("/**")
                .allowedOrigins("http://localhost:8081") // 허용할 출처
                .allowedMethods("GET", "POST", "PUT", "DELETE") // 허용할 HTTP 메서드
                .allowedHeaders("*") // 허용할 헤더
                .allowCredentials(true); // 쿠키 허용
    }
...
  ...
    ...
//========================================================================================================================
@RestController
public class HelloController {

    private static final Logger log = LoggerFactory.getLogger(HelloController.class);

    @GetMapping("/api/hello")
    public String hello() {
        return "Get, Swagger!";
    }

    @PostMapping("/api/hello")
    public Map<String, Object> Post(@RequestBody Map<String, Object> req) {
        log.info("req.toString(): {}", req.toString());
        Map<String, Object> ret = new HashMap<String, Object>();
        ret.put("data", req);
        ret.put("message", "Hello World!");

        return ret;
    }
}


//vue.js
//========================================================================================================================
<template>
  <div class="hello">
    <h1>{{ msg }}</h1>
  </div>
</template>

<script setup>
  import axios from 'axios';
  import {onMounted, ref} from "vue";

  const val1 = ref('test')
  const val2 = ref(null)
  let val3 = null
  let val4 = 'test1'

  onMounted(()=> {

    let pamras = {
      val1: val1.value,
      val2: val2.value,
      val3: val3,
      val4: val4,
    }

    axios.post('/api/hello',pamras,{
      headers:{
        'Content-Type':'application/json'
      }
    }).then(response => {
      console.log(response.data);
    })
    .catch(error => {
      console.error(error);
    });

  })

</script>
<style scoped></style>
//========================================================================================================================

